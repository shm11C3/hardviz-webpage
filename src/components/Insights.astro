---
import { Flame, ActivitySquare, Gamepad2, BrainCircuit, ArrowDownToLine } from "lucide-react";
import { getLangFromUrl, useTranslations } from '../i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const insights = [
  {
    icon: "activity",
    title: t("insights.card1.title"),
    description: t("insights.card1.description"),
  },
  {
    icon: "flame",
    title: t("insights.card2.title"),
    description: t("insights.card2.description"),
  },
  {
    icon: "gamepad",
    title: t("insights.card3.title"),
    description: t("insights.card3.description"),
  },
  {
    icon: "brain",
    title: t("insights.card4.title"),
    description: t("insights.card4.description"),
  },
];
---

<section class="py-16 bg-slate-50 dark:bg-slate-900" id="insights">
  <div class="container mx-auto px-4">
    <div class="text-center mb-12">

      <h2 class="text-3xl md:text-4xl font-bold text-slate-900 dark:text-white">{t("insights.title")}</h2>

      <p class="text-slate-600 dark:text-slate-400 mt-2 text-lg">
        {(() => {
          switch (lang) {
            case "ja":
              return <>システム負荷が高くなるタイミングと原因を知る</>;
            default:
              return <>Know <span class="text-cyan-600 dark:text-cyan-400">when</span> and <span class="text-rose-600 dark:text-rose-400">why</span> your system slows down.</>;
          }
        })()}
      </p>
    </div>

    <div class="grid grid-cols-2 md:grid-cols-4 gap-6 text-center">
      {
        insights.map((item) => (
          <div class="bg-white dark:bg-slate-800 p-5 rounded-xl border border-slate-200 dark:border-slate-700 hover:shadow-md transition">
            <div class="w-12 h-12 mx-auto mb-3 flex items-center justify-center rounded-full bg-slate-100 dark:bg-slate-700">
              {item.icon === "activity" && <ActivitySquare className="w-6 h-6 text-cyan-500" />}
              {item.icon === "flame" && <Flame className="w-6 h-6 text-rose-500" />}
              {item.icon === "gamepad" && <Gamepad2 className="w-6 h-6 text-lime-500" />}
              {item.icon === "brain" && <BrainCircuit className="w-6 h-6 text-indigo-500" />}
            </div>
            <h3 class="text-base font-semibold text-slate-800 dark:text-white">{item.title}</h3>
            <p class="text-sm text-slate-600 dark:text-slate-400">{item.description}</p>
          </div>
        ))
      }
    </div>

    <div class="text-center mt-16">
      <a href="#download" class="download-btn px-8 py-4 md:py-8 bg-cyan-600 hover:bg-cyan-700 text-white font-medium text-lg md:text-2xl rounded-full flex items-center justify-center gap-2 transition-all max-w-[400px] md:max-w-[800px] mx-auto">
        <ArrowDownToLine className="w-5 h-5" />
        {t("insights.download")}
      </a>
    </div>
  </div>
</section>
