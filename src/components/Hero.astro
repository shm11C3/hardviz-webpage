---
import { ArrowDownToLine } from "lucide-react";
import HardwareVisualizer from "./HardwareVisualizer";
import { useTranslations } from "../lib/i18n/astro-i18n";

// Get the current language from localStorage or default to 'en'
const currentLang = () => {
  if (typeof localStorage !== 'undefined') {
    return localStorage.getItem('i18nextLng') || 'en';
  }
  return 'en';
};

const t = useTranslations(currentLang());
---

<section class="relative overflow-hidden bg-gradient-to-b from-slate-900 to-slate-800 py-20 sm:py-32">
  <div class="absolute inset-0 bg-grid-white/[0.05] bg-[size:60px_60px]"></div>
  <div class="container mx-auto px-4 relative z-10">
    <div class="flex flex-col lg:flex-row items-center gap-12">
      <div class="flex-1 text-center lg:text-left">
        <h1 class="text-4xl md:text-5xl lg:text-6xl font-bold text-white mb-6 leading-tight">
          <span data-i18n-key="hero.title">{t("hero.title")}</span> <span class="text-cyan-400" data-i18n-key="hero.titleHighlight">{t("hero.titleHighlight")}</span>
        </h1>
        <p class="text-lg md:text-xl text-slate-300 mb-8 max-w-2xl mx-auto lg:mx-0" data-i18n-key="hero.description">
          {t("hero.description")}
        </p>
        <div class="flex flex-col sm:flex-row gap-4 justify-center lg:justify-start">
          <a
            href="#download"
            class="download-btn px-8 py-3 bg-cyan-500 hover:bg-cyan-600 text-white font-medium rounded-lg flex items-center justify-center gap-2 transition-all"
            data-i18n-key="hero.downloadButton"
          >
            <ArrowDownToLine className="w-5 h-5" />
            {t("hero.downloadButton")}
          </a>
          <a
            href="https://github.com/shm11C3/HardwareVisualizer"
            target="_blank"
            rel="noopener noreferrer"
            class="px-8 py-3 bg-transparent hover:bg-white/10 text-white border border-white/30 font-medium rounded-lg flex items-center justify-center gap-2 transition-all"
            data-i18n-key="hero.githubButton"
          >
            {t("hero.githubButton")}
          </a>
        </div>
      </div>
      <div class="flex-1 relative">
        <HardwareVisualizer client:load />
        <div class="absolute -z-10 -bottom-6 -right-6 w-72 h-72 bg-cyan-500/30 rounded-full blur-3xl"></div>
        <div class="absolute -z-10 -top-6 -left-6 w-72 h-72 bg-purple-500/20 rounded-full blur-3xl"></div>
      </div>
    </div>
  </div>
</section>

<script>
  // Animation JavaScript
  const downloadBtn = document.querySelector('.download-btn');

  if (downloadBtn) {
    downloadBtn.addEventListener('mouseenter', () => {
      const icon = downloadBtn.querySelector('svg');
      if (icon) icon.classList.add('animate-bounce');
    });

    downloadBtn.addEventListener('mouseleave', () => {
      const icon = downloadBtn.querySelector('svg');
      if (icon) icon.classList.remove('animate-bounce');
    });
  }

  // Handle language changes
  document.addEventListener('i18nextLanguageChanged', () => {
    const lang = localStorage.getItem('i18nextLng') || 'en';
    updateTexts(lang);
  });

  function updateTexts(lang) {
    fetch(`/src/lib/i18n/${lang}.json`)
      .then(response => response.json())
      .then(translations => {
        document.querySelectorAll('[data-i18n-key]').forEach(element => {
          const key = element.getAttribute('data-i18n-key');
          const keys = key.split('.');
          let value = translations;
          
          for (const k of keys) {
            if (!value[k]) return;
            value = value[k];
          }
          
          if (typeof value === 'string') {
            element.textContent = value;
          }
        });
      })
      .catch(error => console.error('Error loading translations:', error));
  }
</script>
