---
import Download from "../../components/Download";
import Features from "../../components/Features.astro";
import Footer from "../../components/Footer.astro";
import Header from "../../components/Header.astro";
import Hero from "../../components/Hero.astro";
import Insights from "../../components/Insights.astro";
import Screenshots from "../../components/Screenshots.astro";
import Usage from "../../components/Usage.astro";
import { fetchLatestRelease } from "../../funcs/fetchReleaseData.ts";
import Layout from "../../layouts/Layout.astro";
import type { PlatformDownload } from "../../types/platform";
import { getLangFromUrl, useTranslations } from '../../i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const release = await fetchLatestRelease();

const downloads: PlatformDownload[] = [
  {
    platform: "Windows",
    versions: [
      {
        type: "windows",
        name: "Windows 10/11 (x64)",
        url: release.platforms.windows?.browser_download_url ?? null,
        size: release.platforms.windows?.size ?? "-",
      },
    ],
    primary: false,
  },
  {
    platform: "Linux",
    versions: [
      {
        type: "linuxRPM",
        name: "RPM-based Distros (.rpm)",
        url: release.platforms.linuxRPM?.browser_download_url ?? null,
        size: release.platforms.linuxRPM?.size ?? "-",
      },
      {
        type: "linuxAppImage",
        name: "AppImage (.AppImage)",
        url: release.platforms.linuxAppImage?.browser_download_url ?? null,
        size: release.platforms.linuxAppImage?.size ?? "-",
      },
      {
        type: "linuxDeb",
        name: "Debian/Ubuntu (.deb)",
        url: release.platforms.linuxDeb?.browser_download_url ?? null,
        size: release.platforms.linuxDeb?.size ?? "-",
      },
    ],
    primary: false,
  },
];

const downloadTranslations = {
  title: t("download.title"),
  description: t("download.description"),
  currentVersion: t("download.currentVersion"),
  button: t("download.button"),
  noDownloads: t("download.noDownloads"),
  otherVersions: t("download.otherVersions"),
  githubLink: t("download.githubLink"),
};


const siteUrl = Astro.site ? Astro.site.href : "https://hardviz.com";
const canonical = new URL(Astro.url.pathname, siteUrl).href;
const imageAbs = new URL("/assets/screenshots/slide-1.png", siteUrl).href;

const downloadUrls = downloads
  .flatMap((p) => p.versions.map((v) => v.url).filter(Boolean))
  .slice(0, 6);

const softwareLd = {
  "@context": "https://schema.org",
  "@type": "SoftwareApplication",
  name: "HardwareVisualizer",
  applicationCategory: "UtilitiesApplication",
  operatingSystem: "Windows, Linux",
  offers: {
    "@type": "Offer",
    price: 0,
    priceCurrency: "USD",
  },
  softwareVersion: release.version || undefined,
  downloadUrl: downloadUrls,
  url: canonical,
  image: [imageAbs],
  sameAs: ["https://github.com/shm11C3/HardwareVisualizer"],
  description:
    "CPU、GPU、メモリを軽量でオープンソースのハードウェアモニターで監視します。",
};

---

<Layout title="HardwareVisualizer - 軽量で高機能なハードウェアモニター" lang={lang} description="CPU、GPU、メモリを軽量でオープンソースのハードウェアモニターで監視します。">
  <script slot="head" type="application/ld+json">{JSON.stringify(softwareLd)}</script>
  <Header />
  <main>
    <Hero />
    <Screenshots />
    <Usage />
    <Insights />
    <Features />
    <Download client:load downloads={downloads} latestVersion={release.version} translations={downloadTranslations} />

  </main>
  <Footer />
</Layout>
